plugins {
    id "java-library"
    id "io.qameta.allure" version "2.8.1"
}
def junitVersion = "5.8.2",
    allureVersion = "2.17.2",
    appiumVersion = "7.6.0",
    selenideVersion = "5.25.1",
    ownerVersion = "1.0.12",
    restAssuredVersion = "4.5.0",
    assertjVersion = "3.21.0"

allure {
    autoconfigure = true
    version = allureVersion  // Latest Allure Version
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion // Latest Allure Version
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.appium:java-client:$appiumVersion",
            "com.codeborne:selenide:$selenideVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "org.assertj:assertj-core:$assertjVersion",

    )

    testRuntimeOnly(
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion",
            "org.slf4j:slf4j-simple:1.7.32"
    )
}
// Choose ones of [emulate, real, browserstack, selenoid]
def typeStartingByDefault = "selenoid"

test {
    systemProperties(System.getProperties())

    if (System.getProperty("typeDevice") == null) {
        systemProperties["typeDevice"] = typeStartingByDefault
        systemProperties["locationDevice"] = "local"

    }
    if (System.getProperty("typeDevice") == "emulate") {
        systemProperties["locationDevice"] = "local"

    }
    if (System.getProperty("typeDevice") == "real") {
        systemProperties["locationDevice"] = "local"

    }
    if (System.getProperty("typeDevice") == "browserstack") {
        systemProperties["locationDevice"] = "remote"

    }
    if (System.getProperty("typeDevice") == "selenoid") {
        systemProperties["locationDevice"] = "remote"
    }

    useJUnitPlatform()
}
